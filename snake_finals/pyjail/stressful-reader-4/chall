#!/usr/local/bin/python3


class Jail():
    def __init__(self) -> None:
        self.title = r"""
         _____ _                      __       _                       _
        /  ___| |                    / _|     | |                     | |
        \ `--.| |_ _ __ ___  ___ ___| |_ _   _| |   _ __ ___  __ _  __| | ___ _ __
         `--. \ __| '__/ _ \/ __/ __|  _| | | | |  | '__/ _ \/ _` |/ _` |/ _ \ '__|
        /\__/ / |_| | |  __/\__ \__ \ | | |_| | |  | | |  __/ (_| | (_| |  __/ |
        \____/ \__|_|  \___||___/___/_|  \__,_|_|  |_|  \___|\__,_|\__,_|\___|_|

                            (now with refactored code! \o/)
        """
        print(self.title)
        self.title = r"                    (now with refactored code! \o/)"
        print()
        print()
        print("Will you be able to read the $FLAG?")
        print("> ",end="")

        self.run_code(input())

    def run_code(self, code):

        if len(code) > 6000:
            print("Woah that's a lot! Not gonna run it...")
            return

        # Just a nice blacklist
        badchars = [ 'c', 'h', 'j', 'k', 'n', 'o', 'p', 'q', 'u', 'w', 'x',
                    'y', 'z' , 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I',
                    'J', 'K', 'L', 'M', 'N' , 'O', 'P', 'Q', 'R', 'S', 'T',
                    'U', 'V', 'W' , 'X', 'Y', 'Z', '!', '#', '$', '%', '&',
                    '-', '/', ';', '<', '=', '>', '?', '@' , '[', '\\', ']',
                    '^', '`', '{', '|', '}', '~' , '0', '1', '2', '3', '4',
                    '5', '6', '7', '8', '9']


        # so yeah, you can't use pretty much anything
        badwords = ["aiter", "any", "ascii", "bin", "bool", "breakpoint" ,
                    "callable", "chr", "classmethod", "compile", "dict" ,
                    "enumerate", "exec", "eval", "filter", "getattr" ,
                    "globals", "input", "iter", "next", "locals", "memoryview"
                    , "next", "object", "open", "print", "setattr" ,
                    "staticmethod", "vars", "__import__", "bytes", "keys",
                    "str" , "join", "upper", "__class__", "__delattr__",
                    "__dict__", "__dir__", "__doc__", "__eq__", "__format__",
                    "__ge__", "__getattribute__", "__getstate__", "__gt__",
                    "__hash__", "__init__", "__init_subclass__", "__le__",
                    "__lt__", "__module__", "__ne__", "__new__", "__reduce__",
                    "__reduce_ex__", "__repr__", "__setattr__", "__sizeof__",
                    "__str__", "__subclasshook__", "__weakref__", "__getitem__",
                    "run_code"]


        if (code.isascii() and
            all([x not in code for x in badchars]) and 
            all([x not in code for x in badwords])):

            code = eval(code)
            if any(forbidden in code for forbidden in ['os', 'system', 'import', 'exec', 'eval']):
                print("double filtering broooo")
            else:
                exec(code, {'__builtins__':{}}) # now everything should be good
        else:
            print("Exploiting detected, plz halp :/")

if (__name__ == "__main__"):
    Jail()
